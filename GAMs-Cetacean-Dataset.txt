###Code script used for modelling the bias on the number of sightings recorded per survey under R software

#Libraries
library (foreign)
library (mgcv)
library (car)
library (boot)
library (pROC)
library (PerformanceAnalytics)
library (gratia)

#Pearson Correlation
chart.Correlation(data, histogram=TRUE, method="pearson")

#Variance Inflation Factor 
vif(lm(Sight~Effort+Min_Sea+Max_Sea+Min_Wind+Max_Wind+Min_Vis+Max_Vis,data=data))

#Model Fitting
gam1<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Max_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4), family=poisson(link="log"),data = data)

#Checking overfit
sum(residuals(gam1, type = "pearson")^2) / df.residual(gam1)
gamTh1<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Max_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4), family=nb(),data = data)
th<-gamTh1$family$getTheta(TRUE)

#Backward selection
gam1<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Max_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4), family=negbin(theta=th),data = data)

gam2<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4), family=negbin(theta=th),data = data)

AIC(gam1,gam2)
anova(gam1,gam2,test='Chisq')

gam3<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Max_Vis,k=4), family=negbin(theta=th),data = data)

AIC(gam3,gam2)

gam4<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4), family=negbin(theta=th),data = data)

AIC(gam4,gam2)
anova(gam4,gam2,test='Chisq')

gam5<-gam(Sight~s(Effort,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4), family=negbin(theta=th),data = data)

AIC(gam5,gam2)

gam6<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4), family=negbin(theta=th),data = data)

AIC(gam6,gam2)

gam7<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4), family=negbin(theta=th),data = data)

AIC(gam7,gam2)

gam8<-gam(Sight~s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4), family=negbin(theta=th),data = data)

AIC(gam8,gam2)

#Forward selection
gamA<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4)+s(MEO,k=4)+s(LEO,k=4), family=negbin(theta=th),data = data)

gamB<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4)+s(Comb,k=4), family=negbin(theta=th),data = data)

AIC(gamA,gamB)
anova(gamA,gamB,test='Chisq')

gamC<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4)+s(Mean,k=4), family=negbin(theta=th),data = data)

AIC(gamC,gamB)
anova(gamC,gamB,test='Chisq')

#Backward selection
gamB1<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Max_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4)+s(Cum,k=4), family=negbin(theta=th),data = data)

gamB2<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4)+s(Comb,k=4), family=negbin(theta=th),data = data)

AIC(gamB1,gamB2)
anova(gamB1,gamB2,test='Chisq')

gamB3<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Max_Vis,k=4)+s(Comb,k=4), family=negbin(theta=th),data = data)

AIC(gamB3,gamB2)

gamB4<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Comb,k=4), family=negbin(theta=th),data = data)

AIC(gamB4,gamB2)
anova(gamB4,gamB2,test='Chisq')

gamB5<-gam(Sight~s(Effort,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4)+s(Comb,k=4), family=negbin(theta=th),data = data)

AIC(gamB5,gamB2)

gamB6<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4), family=negbin(theta=th),data = data)

AIC(gamB6,gamB2)

gamB7<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4)+s(Comb,k=4), family=negbin(theta=th),data = data)

AIC(gamB7,gamB2)

gamB8<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4)+s(Comb,k=4), family=negbin(theta=th),data = data)

AIC(gamB8,gamB2)

gamB9<-gam(Sight~s(Min_Sea,k=4)+s(Min_Wind,k=4)+s(Max_Wind,k=4)+s(Min_Vis,k=4)+s(Max_Vis,k=4)+s(Comb,k=4), family=negbin(theta=th),data = data)

AIC(gamB9,gamB2)

gamlin<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+Min_Wind+s(Max_Wind,k=4)+s(Min_Vis,k=4)+Max_Vis+s(Comb,k=4), family=negbin(theta=th),data = data)

AIC(gamlin,gamB2)
anova(gamlin,gamB2,test='Chisq')

#Best model
gam<-gam(Sight~s(Effort,k=4)+s(Min_Sea,k=4)+Min_Wind+s(Max_Wind,k=4)+s(Min_Vis,k=4)+Max_Vis+s(Cum,k=4), family=negbin(theta=th),data = data)

#Diagnostic plots and adequacy of number of splines
gam.check(gam)

#Influential data points
plot(influence.gam(gam))

#Model residuals correlation 
data1<-subset(data,Min_Wind!="NA")
summary(data1)

par(mfrow=c(3,3))
plot(data1$Effort,residuals(gam))
plot(data1$Min_Sea,residuals(gam))
plot(data1$Min_Wind,residuals(gam))
plot(data1$Max_Wind,residuals(gam))
plot(data1$Min_Vis,residuals(gam))
plot(data1$Max_Vis,residuals(gam))
plot(data1$Cum,residuals(gam))

#Model final plots
gratia:::draw.gam(gam, parametric=TRUE, rug=TRUE, ci_col="#66CC99")

par(mfrow=c(3,3))
plot(gam, select = 1,xlab="Effort (Km)", ylab="s(Effort, 2.96)",ylim=c(-1.5,1.5),rug=T,cex.lab=1.25,cex.axis=1.25)  
plot(gam, select = 2,xlab="Min Sea (Douglas Scale)", ylab="s(Min Sea, 2.15)",ylim=c(-0.8,0.2),rug=T,cex.lab=1.25,cex.axis=1.25)  
termplot (gam,terms="Min_Wind", xlab=expression(paste("Min Wind (Beaufort Scale)")), ylab="Partial for Min Wind",ylim=c(-1.5,0.1), rug=T, se=T, col.term="black", lwd.term=1, col.res="black", pch=15, cex=0.15, col.se="black",cex.lab=1.25,cex.axis=1.25)
plot(gam, select = 3,xlab="Max Wind (Beaufort Scale)", ylab="s(Max Wind, 1.75)",ylim=c(-0.5,1),rug=T,cex.lab=1.25,cex.axis=1.25)  
plot(gam, select = 4,xlab="Min Vis", ylab="s(Min Vis, 1.76)",ylim=c(-0.5,0.3),rug=T,cex.lab=1.25,cex.axis=1.25) 
termplot (gam,terms="Max_Vis", xlab=expression(paste("Max Vis")), ylab="Partial for Max Vis",ylim=c(-2,0.3), rug=T, se=T, col.term="black", lwd.term=1, col.res="black", pch=15, cex=0.15, col.se="black",cex.lab=1.25,cex.axis=1.25) 
plot(gam, select = 5,xlab="Combined Evaluation", ylab="s(Comb, 1.39)",ylim=c(-1,0.5),rug=T,cex.lab=1.25,cex.axis=1.25)
â€ƒ
###Code script used for modelling the bias on the identification success under R software

#Libraries
library (foreign)
library (mgcv)
library (car)
library(boot)
library(pROC)
library(PerformanceAnalytics)
library (gratia)

#Character to Factor
class(data$Group)
data$Group<-as.factor(data$Group)

data1 <- data 
data1[data1 == ""] <- NA  
summary(data1)

#Correlation
panel.cor <- function(x, y, digits=2, prefix="", cex.cor, ...)
{
  usr <- par("usr"); on.exit(par(usr))
  par(usr = c(0, 1, 0, 1))
  r <- abs(cor(x, y))
  txt <- format(c(r, 0.123456789), digits=digits)[1]
  txt <- paste(prefix, txt, sep="")
  if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
  text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(~Size+Dist+Sea+Wind+Visibility+MEO+LEO+Cum+Mean, data=data1,      
      lower.panel=panel.smooth, upper.panel=panel.cor,
      pch=20, na.action = na.omit, main="Variables Pair Plot Matrix")

#Variance Inflation Factor 
vif(lm(Success~Size+Dist+Sea+Wind+Visibility, data=data1))

#Model Fitting

#Backward selection
gam1 <-gam(Success ~ Group+s(Size,k=4)+s(Dist, k=4)+s(Sea,k=4)+s(Wind,k=4)+s(Visibility,k=4),family = binomial(link = "logit"), data = data1)

gam2 <-gam(Success ~ Group+s(Size,k=4)+s(Dist, k=4)+s(Wind_state,k=4)+s(Visibility,k=4),family = binomial(link = "logit"), data = data1)

AIC(gam1,gam2)
anova(gam1,gam2,test='Chisq')

gam3 <-gam(Success ~ Group+s(Size,k=4)+s(Dist, k=4)+s(Wind_state,k=4),family = binomial(link = "logit"), data = data1)

AIC(gam3,gam2)
anova(gam3,gam2,test='Chisq')

gam4 <-gam(Success ~ Group+s(Size,k=4)+s(Dist, k=4)+s(Visibility,k=4),family = binomial(link = "logit"), data = data1)

AIC(gam4,gam2)

gam5 <-gam(Success ~ s(Size,k=4)+s(Dist,k=4)+s(Wind_state,k=4)+s(Visibility,k=4),family = binomial(link = "logit"), data = data1)

AIC(gam5,gam2)

gam6 <-gam(Success ~ Group+s(Size, k=4)+s(Wind_state,k=4)+s(Visibility,k=4),family = binomial(link = "logit"), data = data1)

AIC(gam6,gam2)

gam7 <-gam(Success ~ Group+s(Dist, k=4)+s(Wind_state,k=4)+s(Visibility,k=4),family = binomial(link = "logit"), data = data1)

AIC(gam7,gam2)

#Forward selection
gamA <-gam(Success ~ Group+s(Size,k=4)+s(Dist, k=4)+s(Wind,k=4)+s(Visibility,k=4)+s(MEO,k=4)+s(LEO,k=4),family = binomial(link = "logit"), data = data1)

gamB <-gam(Success ~ Group+s(Size,k=4)+s(Dist, k=4)+s(Wind_state,k=4)+s(Visibility,k=4)+s(Comb,k=4),family = binomial(link = "logit"), data = data1)

AIC(gamA,gamB)
anova(gamB,gamA,test='Chisq')

gamC <-gam(Success ~ Group+s(Size,k=4)+s(Dist, k=4)+s(Wind_state,k=4)+s(Visibility,k=4)+s(Mean,k=4),family = binomial(link = "logit"), data = data1)

AIC(gamC,gamB)
anova(gamC,gamB,test='Chisq')

#Backward selection
gamB1 <-gam(Success ~ Group+s(Size,k=4)+s(Dist, k=4)+s(Sea,k=4)+s(Wind,k=4)+s(Visibility,k=4)+s(Cum,k=4),family = binomial(link = "logit"), data = data1)

gamB2 <-gam(Success ~ Group+s(Size,k=4)+s(Dist, k=4)+s(Sea_state,k=4)+s(Wind_state,k=4)+s(Visibility,k=4),family = binomial(link = "logit"), data = data1)

AIC(gamB1,gamB2)
anova(gamB1,gamB2,test='Chisq')

gamB3 <-gam(Success ~ Group+s(Size,k=4)+s(Dist, k=4)+s(Wind_state,k=4)+s(Visibility,k=4),family = binomial(link = "logit"), data = data1)

AIC(gamB3,gamB2)
anova(gamB3,gamB2,test='Chisq')

gamB4 <-gam(Success ~ Group+s(Size,k=4)+s(Dist, k=4)+s(Wind_state,k=4),family = binomial(link = "logit"), data = data1)

AIC(gamB4,gamB3)

gamB5 <-gam(Success ~ Group+s(Size,k=4)+s(Dist, k=4)+s(Visibility,k=4),family = binomial(link = "logit"), data = data1)

AIC(gamB5,gamB3)

gamB6 <-gam(Success ~ s(Size,k=4)+s(Dist, k=4)+s(Wind_state,k=4)+s(Visibility,k=4),family = binomial(link = "logit"), data = data1)

AIC(gamB6,gamB3)

gamB7 <-gam(Success ~ Group+s(Size,k=4)+s(Wind_state,k=4)+s(Visibility,k=4),family = binomial(link = "logit"), data = data1)

AIC(gamB7,gamB3)

gamB8 <-gam(Success ~ Group+s(Dist, k=4)+s(Wind_state,k=4)+s(Visibility,k=4),family = binomial(link = "logit"), data = data1)

AIC(gamB8,gamB3)

#Best model
gam <-gam(Success ~ Group+s(Size,k=4)+s(Dist, k=4)+s(Wind,k=4)+s(Visibility,k=4),family = binomial(link = "logit"), data = data1)

#Diagnostic plots and adequacy of number of splines
gam.check(gam)

#Influential data points
plot(influence.gam(gam))

#Model residuals correlation 
data2<-subset(data1,Wind!="NA")
summary(data2)
nrow(data2)
data3<-subset(data2,Dist!="NA")
summary(data3)
data4<-subset(data3,Group!="NA")
summary(data4)

par(mfrow=c(3,2))
plot(data4$Group,residuals(gam))
plot(data4$Size,residuals(gam))
plot(data4$Dist,residuals(gam))
plot(data4$Wind,residuals(gam))
plot(data4$Visibility,residuals(gam))

#Model final plots
gratia:::draw.gam(gam, parametric=TRUE, character=TRUE, rug=TRUE, ci_col="#66CC99")

par(mfrow=c(2,3))
termplot (gam,terms="Group", xlab=expression(paste("Group")), ylab="Partial for Group",ylim=c(-0.1,1), rug=T, se=T, col.term="black", lwd.term=1, col.res="black", pch=15, cex=0.15, col.se="black",cex.lab=1.25,cex.axis=1.25)
plot(gam, select = 1,xlab="Size", ylab="s(Size, 1.24)",ylim=c(-2,30),rug=T,cex.lab=1.25,cex.axis=1.25)
plot(gam, select = 2,xlab="Distance (Scale 0-7)", ylab="s(Dist, 2.10)",ylim=c(-1.5,1),rug=T,cex.lab=1.25,cex.axis=1.25)
plot(gam, select = 3,xlab="Wind State (Beaufort Scale)", ylab="s(Wind State, 2.31)",ylim=c(-0.25,1),rug=T,cex.lab=1.25,cex.axis=1.25)  
plot(gam, select = 4,xlab="Visibility (Scale 0-10)", ylab="s(Visibility, 2.34)",ylim=c(-0.5,1),rug=T,cex.lab=1.25,cex.axis=1.25)  


